#!/usr/bin/env python3
"""
Script to read two of the FCTBABLES generated by
read_save_pangu.R
and calculate U10m and dump it in another FCTABLE
"""

import sys
import os
import sqlite3
import pandas as pd
import numpy as np

def update_dbase(dbase1:str, dbase2:str) -> None:
    """
    Reads the 2 databases and updates the value of one
    based on the value of the other one
    Args:
        dbase1 (str): The name of the first sqlite file
        dbase2 (str): The name of the second sqlite file
    Returns:
        None
    """

    # Connect to the first SQLite database
    conn1 = sqlite3.connect(dbase1)
    cursor1 = conn1.cursor()
    import math
    conn1.create_function('SQRT', 1, math.sqrt)
    # Attach the second SQLite database
    cursor1.execute(f"ATTACH DATABASE '{dbase2}' AS second_db")
    #this allows me to get the tables from each file
    tables1 = cursor1.execute("SELECT name FROM sqlite_master WHERE type='table';").fetchall()
    tables2 = cursor1.execute("SELECT name FROM second_db.sqlite_master WHERE type='table';").fetchall()

    # Execute the UPDATE statement
    #cursor1.execute("""
    #UPDATE main.FC
    #SET panguweather_det = SQRT(main.FC.panguweather_det*main.FC.panguweather_det + second_db.FC.panguweather_det*second_db.FC.panguweather_det)
    #""")
    # Execute the UPDATE statement
    cursor1.execute("""
    UPDATE FC
    SET panguweather_det = SQRT(
        (SELECT panguweather_det FROM FC)*(SELECT panguweather_det FROM FC) +  (SELECT panguweather_det FROM second_db.FC) * (SELECT panguweather_det FROM second_db.FC)
    )
    """)
    cursor1.execute('UPDATE FC SET parameter = "U10m"')


    # Commit the changes and close the connections
    conn1.commit()
    conn1.close()


def read_sql(dbase:str) -> pd.DataFrame:
    """
    Reads the database
    Args:
        dbase (str): The name of the sqlite file
    Returns:
        pd.DataFrame: pandas dataframe
    """
    con=sqlite3.connect(dbase)
    com = "SELECT * FROM FC"
    return pd.read_sql(com,con)


#hardcoding this here for the moment.
MODEL="panguweather"
CY="12" #doing only 12 UTC cycle for the moment
if __name__=="__main__":
    if len(sys.argv) == 1:
        print("Please provide PERIOD (yearmonth)")
        sys.exit(1)
    else:
        period = sys.argv[1]   
        YYYY=period[0:4]
        MM=period[4:6]
    DATA=os.path.join("/ec/res4/scratch/nhd/verification/DMI_data/FCTABLE/",MODEL,YYYY,MM)
    dbase1=os.path.join(DATA,f"FCTABLE_10u_{period}_{CY}.sqlite")
    dbase2=os.path.join(DATA,f"FCTABLE_10v_{period}_{CY}.sqlite")
    #update_dbase(dbase1, dbase2)

    #just a sanity check
    #df_u_orig = read_sql(os.path.join(DATA,f"FCTABLE_10u_{period}_{CY}.sqlite.orig"))
    #df_v = read_sql(os.path.join(DATA,f"FCTABLE_10v_{period}_{CY}.sqlite"))
    #df_u_new = read_sql(os.path.join(DATA,f"FCTABLE_10u_{period}_{CY}.sqlite"))

    #dbase=os.path.join(DATA,f"FCTABLE_10u_{period}_{CY}.sqlite")
    #df_u10 = read_sql(dbase)

    #dbase=os.path.join(DATA,f"FCTABLE_10v_{period}_{CY}.sqlite")
    #df_v10 = read_sql(dbase)

    #df_new = df_u10.copy()
    #df_new[MODEL+"_det"] = np.sqrt(df_u10[MODEL+"_det"]**2 + df_v10[MODEL+"_det"]**2)
